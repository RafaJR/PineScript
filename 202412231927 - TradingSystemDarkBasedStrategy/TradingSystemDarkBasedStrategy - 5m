//@version=5
strategy(title="TradingSystemDarkBasedStrategy", shorttitle="Estrategia basada indicador 'Trading System (Dark)'", overlay=true, pyramiding=0, calc_on_order_fills=false, commission_type=strategy.commission.percent, commission_value=0.1, default_qty_type=strategy.percent_of_equity, default_qty_value=100, initial_capital=100, currency=currency.USD)
// https://www.youtube.com/watch?v=fsDkY51z3Kc
// Operar sobre BTCUSD a escala de 5 minutos

// Configuración de entrada
source = input.source(close)
fastLength = input.int(12, minval=1, title="PPO Fast", group="PPO Configuraion")
slowLength = input.int(26, minval=1, title="PPO Slow", group="PPO Configuraion")
smoother = input.int(2, minval=1, title="PPO Smooth", group="PPO Configuraion")

basisLength = input.int(1, title="Fast averange", group="Averamge Configuraion")
smoothLength = input.int(39, title="Fast averange", group="Averamge Configuraion")

adxLevel = input.int(16, inline="ADX Level", group="ADX configuradion")
adxOutLevel = input.int(5, inline="ADX Out Level", group="ADX configuradion")
len_dmi = input.int(40, minval=1, title="DI Length", group="ADX configuradion")
lensig_dmi = input.int(14, title="ADX Smoothing", minval=1, maxval=50, group="ADX configuradion")

rsiAverange = input.int(16,inline="RSI Averange", group="RSI Configuration")
rsiLowLevel = input.int(38,inline="RSI level", group="RSI Configuration")
rsiHighLevel = input.int(75,inline="RSI level", group="RSI Configuration")

// StopLoss / TakeProffit percents
stopLossPercent = input(10, title="Porcentaje de Stop Loss (%)", group="Risk control")
takeProfitPercent = input(8, title="Porcentaje de Take Profit (%)", group="Risk control")

// Cálculos del indicador PPO
fastMA = ta.ema(source, fastLength)
slowMA = ta.ema(source, slowLength)
macd = fastMA - slowMA
macd2 = (macd / slowMA) * 100
smoothPPO = ta.sma(macd2, smoother)  // PPO suavizado

// Identificación de mínimos y máximos en el precio y PPO   // Mínimos en PPO
// Mínimos en PPO
oscMins = smoothPPO > smoothPPO[1] and smoothPPO[1] < smoothPPO[2]

// Máximos en PPO
oscMax = smoothPPO < smoothPPO[1] and smoothPPO[1] > smoothPPO[2]

// Trazado de máximos/mínimos en PPO
//plotshape(oscMins ? smoothPPO : na, style=shape.triangleup, location=location.belowbar, color=color.green, size=size.small)
//plotshape(oscMax ? smoothPPO : na, style=shape.triangledown, location=location.abovebar, color=color.red, size=size.small)

// Medía de base de tendencia
basis = ta.sma(close, basisLength)
smooth = ta.sma(close, smoothLength)
var bool checkUpperTendence = false
var bool checkLowerTendence = false
plot(basis, title="Minor term avg", color=color.white, style=plot.style_line, linewidth=1)
plot(smooth, title="Smooth term avg", color=color.white, style=plot.style_line, linewidth=2)

// Cálculo de ADX
[diplus, diminus, adx] = ta.dmi(len_dmi, lensig_dmi)
var bool checkAdxLevel  = false

// Cálculo de RSI
// Indicadores adicionales para filtrar señales
rsi = ta.rsi(close, rsiAverange)
var bool checkRSIOverBought = false
var bool checkRSIOverSell = false

// Variables para la detección de señales de compra/venta o la parada de las mismas.
var bool closeLongEntry = false
var bool closeShortEntry = false
var bool longEntry = false
var bool shortEntry = false

var longOpName = "Buy"
var shortOpName = "Sell"

if (true)

    checkUpperTendence := basis > smooth
    checkLowerTendence := basis < smooth
    checkAdxLevel := adx > adxLevel
    checkRSIOverBought := rsi >= rsiHighLevel
    checkRSIOverSell := rsi <= rsiLowLevel

    longEntry := oscMins and checkUpperTendence and checkAdxLevel and not checkRSIOverBought
    shortEntry := oscMax and checkLowerTendence and checkAdxLevel and not checkRSIOverSell
    closeLongEntry := oscMax
    closeShortEntry := oscMins

    //if(closeLongEntry)
    //    strategy.close(longOpName)
    //if(closeShortEntry)
    //    strategy.close(shortOpName)
    if(longEntry)
        stopLossPrize = source - (source * (stopLossPercent / 100))
        takeProfitPrize = source + (source * (takeProfitPercent / 100))
        strategy.entry(longOpName, strategy.long)
        strategy.exit(longOpName + "Exit", longOpName, stop=stopLossPrize, limit=takeProfitPrize)
    if(shortEntry)
        stopLossPrize = source + (source * (stopLossPercent / 100))
        takeProfitPrize = source - (source * (takeProfitPercent / 100))
        strategy.entry(shortOpName, strategy.short)
        strategy.exit(shortOpName + "Exit", shortOpName, stop=stopLossPrize, limit=takeProfitPrize)

//plotshape(longEntry ? smoothPPO : na, style=shape.triangleup, location=location.belowbar, color=color.green, size=size.small)
//plotshape(closeLongEntry ? smoothPPO : na, style=shape.xcross, location=location.abovebar, color=color.green, size=size.small)

//plotshape(shortEntry ? smoothPPO : na, style=shape.triangledown, location=location.abovebar, color=color.red, size=size.small)
//plotshape(closeShortEntry ? smoothPPO : na, style=shape.xcross, location=location.belowbar, color=color.red, size=size.small)

