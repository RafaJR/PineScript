//@version=5
strategy("JurikHull", shorttitle="Estrategia de medias m칩viles de Jurik y Hull combinadas", overlay=true, pyramiding=0,
         calc_on_order_fills=false, commission_type=strategy.commission.percent,
         commission_value=0.1, default_qty_type=strategy.percent_of_equity, default_qty_value=100,
         initial_capital=100, currency=currency.EUR)

source = input.source(close)

// StopLoss / TakeProffit percents
stopLossPercent = input(4, title="Porcentaje de Stop Loss (%)", group="Risk control")
takeProfitPercent = input(13, title="Porcentaje de Take Profit (%)", group="Risk control")

// Jurik Moving Average
length = input.int(title="Length", defval=7, minval=1)
phase = input.int(title="Phase", defval=50, minval=-100, maxval=100)
power = input.int(title="Power", defval=2, minval=1)
src = input.source(defval=close, title="Source")
highlightMovements = input.bool(title="Highlight Movements ?", defval=true)

// C치lculo de phaseRatio, beta y alpha
phaseRatio = phase < -100 ? 0.5 : phase > 100 ? 2.5 : phase / 100 + 1.5
beta = 0.45 * (length - 1) / (0.45 * (length - 1) + 2)
alpha = math.pow(beta, power)

// Variables de c치lculo
var float jma = na
var float e0 = na
var float e1 = na
var float e2 = na

// F칩rmula de la Jurik Moving Average
e0 := (1 - alpha) * src + alpha * nz(e0[1])
e1 := (src - e0) * (1 - beta) + beta * nz(e1[1])
e2 := (e0 + phaseRatio * e1 - nz(jma[1])) * math.pow(1 - alpha, 2) + math.pow(alpha, 2) * nz(e2[1])
jma := e2 + nz(jma[1])

// jma stats and colors
var bool jmaIsLong = false
var bool jmaIsShort = false
jmaColor = color.white

bool trendIsBullish = highlightMovements and jma > jma[1]
bool trendIsBearish = highlightMovements and jma < jma[1]

if trendIsBullish
    jmaColor := #00ff08
    jmaIsLong := true
    jmaIsShort := false
else if trendIsBearish
    jmaColor := #ff0404
    jmaIsShort := true
    jmaIsLong := false

// JMA print
plot(jma, title="JMA", linewidth=5, color=color.new(jmaColor, 0))

bool operationOnCourse = false

var bool longEntry = false
var bool shortEntry = false
var bool killLongEntry = false
var bool killShortEntry = false

longEntry := trendIsBullish and not operationOnCourse //and rsi > rsiLevel and adx > adxLevel
shortEntry := trendIsBearish and not operationOnCourse //and rsi < rsiLevel and adx > adxLevel
killLongEntry := trendIsBearish and operationOnCourse
killShortEntry := trendIsBullish and operationOnCourse

//if (year == 2024 and month == 1 and dayofmonth >= 6 and dayofmonth <= 7)
if (true)
    // Operation nomenclature variables
    var int longOpCount = 0
    var int shortOpCount = 0
    var string longOpName = ""
    var string shortOpName = ""

    if (killLongEntry)
        strategy.close(longOpName)
        operationOnCourse := false
    if (killShortEntry)
        strategy.close(shortOpName)
        operationOnCourse := false
    if (longEntry)
        longOpCount += 1
        longOpName := "Long" + str.tostring(longOpCount)
        stopLossPrize = source - (source * (stopLossPercent / 100))
        takeProfitPrize = source + (source * (takeProfitPercent / 100))
        strategy.entry(longOpName, strategy.long)
        strategy.exit(longOpName + "Exit", longOpName, stop=stopLossPrize)
        //strategy.exit(longOpName + "Exit", longOpName, stop=stopLossPrize, limit=takeProfitPrize)
        operationOnCourse := true
    if (shortEntry)
        shortOpCount += 1
        shortOpName := "Short" + str.tostring(shortOpCount)
        stopLossPrize = source + (source * (stopLossPercent / 100))
        takeProfitPrize = source - (source * (takeProfitPercent / 100))
        strategy.entry(shortOpName, strategy.short)
        strategy.exit(shortOpName + "Exit", shortOpName, stop=stopLossPrize)
        //strategy.exit(shortOpName + "Exit", shortOpName, stop=stopLossPrize, limit=takeProfitPrize)
        operationOnCourse := true